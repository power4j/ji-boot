server:
  port: 18081
  undertow:
    buffer-size: 1024
    threads:
      io: 16
      worker: 2000
    direct-buffers: true
  servlet:
    context-path: /api

spring:
  profiles:
    active: dev
  application:
    name: "@project.artifactId@"
  redis:
    database: ${REDIS_DB:2}
    host: ${REDIS_HOST:127.0.0.1}
    port: ${REDIS_PORT:6379}
    timeout: 5s
    ssl: false
  dinger:
    project-id: ${spring.application.name}
    dingers:
      # 使用钉钉机器人, 请根据自己机器人配置信息进行修改
      dingtalk:
        tokenId: ${DING_TALK_TOKEN}
        secret: ${DING_TALK_SECRET}
  quartz:
    trace: true # 启用 trace 日志, 默认 false
    startup-delay: 10s
    auto-startup: true # 自动启动调度器 默认 true
    job-store-type: jdbc #数据库方式
    wait-for-jobs-to-complete-on-shutdown: true # 应用关闭时,是否等待作业完成，默认 false
    jdbc:
      initialize-schema: never #不初始化表结构
    # Quartz 原生配置
    properties:
      org:
        quartz:
          scheduler:
            instanceId: AUTO #默认主机名和时间戳生成实例ID,可以是任何字符串，但对于所有调度程序来说，必须是唯一的 对应qrtz_scheduler_state INSTANCE_NAME字段
            #instanceName: clusteredScheduler #quartzScheduler
          jobStore:
            class: org.quartz.impl.jdbcjobstore.JobStoreTX #持久化配置
            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate #我们仅为数据库制作了特定于数据库的代理
            useProperties: false #以指示JDBCJobStore将JobDataMaps中的所有值都作为字符串，因此可以作为名称 - 值对存储而不是在BLOB列中以其序列化形式存储更多复杂的对象。从长远来看，这是更安全的，因为您避免了将非String类序列化为BLOB的类版本问题。
            tablePrefix: QRTZ_  #数据库表前缀
            misfireThreshold: 60000 #在被认为“失火”之前，调度程序将“容忍”一个Triggers将其下一个启动时间通过的毫秒数。默认值（如果您在配置中未输入此属性）为60000（60秒）。
            clusterCheckinInterval: 5000 #设置此实例“检入”*与群集的其他实例的频率（以毫秒为单位）。影响检测失败实例的速度。
            isClustered: true #打开群集功能
          threadPool: #连接池
            class: org.quartz.simpl.SimpleThreadPool
            threadCount: 10
            threadPriority: 5
            threadsInheritContextClassLoaderOfInitializingThread: true

springdoc:
  version: "@project.version@"
  api-docs:
    enabled: true
    path: /v3/api-docs
  swagger-ui:
    #path: /swagger-ui.html
    #disable-swagger-default-url: true
    persist-authorization: true
    display-request-duration: true
    groups-order: ASC
    apisSorter: alpha
    operationsSorter: method
    tagsSorter: alpha
    #oauth:
    #  clientId: newClient
    #  clientSecret: newClientSecret
  #oAuthFlow:
  #  authorizationUrl: http://localhost:8083/auth/realms/springdoc/protocol/openid-connect/auth
  #  tokenUrl: http://localhost:8083/auth/realms/springdoc/protocol/openid-connect/token
  show-actuator: true
  group-configs:
    - group: sys 系统管理
      paths-to-match: /sys/**
    - group: 控制台
      paths-to-match: /am/**
    - group: 模拟测试
      paths-to-match: /mock/**
    - group: 监控
      paths-to-match: /actuator/**


mybatis-plus:
  mapper-locations: classpath:/mapper/**/*Mapper.xml
  global-config:
    banner: false
    db-config:
      field-strategy: NOT_EMPTY
      logic-delete-value: now() # 逻辑已删除值
      logic-not-delete-value: 'null' # 逻辑未删除值
  type-handlers-package:  com.power4j.ji.common.data.mybatis.handler

ji-boot:
  doc:
    global-security-scheme:
      # 开启后能在swagger页面设置api-token,这样才能以用户的身份调用后端接口
      enabled: false
  # 缓存配置
  cache:
    # redisson caffeine none
    type: redisson
    caffeine:
      spec: "expireAfterWrite=24h,maximumSize=100000"
    redisson:
      ttl: 86400000
      max-idle-time: 36000
      max-size: 0
  notify:
    # 钉钉消息通知
    ding-talk:
      enabled: true
    # 公众号消息通知
    wx-mp:
      enabled: true
      app-id: ${WX_MP_APPID}
      secret: ${WX_MP_SECRET}
      subscribers: oiwtWuMNNa6njL3bE7_9ADOKMEWc
  # 常量字典
  dict:
    # 需要扫描项目以外的包
    scan-packages: com.power4j.ji
    # 启用内建的API接口
    enable-endpoint: true
    # 接口URL
    endpoint-base-url: /sys/immutable-dictionaries
  # 自定义验证码产生地址和消费地址
  captcha:
    code-url: '/code'
    consumer: '/login'
  security:
    # 可自定义登录、注销地址
    login-url: '/login'
    logout-url: '/logout'
    api-token:
      # 过期时间,秒
      expire-sec: 86400
      # 每个用户的最大有效token
      max-user-token: 1
    # 可自定义安全访问控制
    access:
      enabled: true
      # 静态资源,放行
      ignore:
        patterns: "/static/**,/webjars/**,/favicon.ico"
      filters:
        # 只允许特定IP访问监控端点
        - patterns: '/actuator/**'
          methods: GET,POST
          access: 'hasIpAddress("127.0.0.1")'
        # 应用管理接口,不允许外部访问
        - patterns: '/am/**'
          access: 'hasIpAddress("127.0.0.1")'
        # swagger 放行
        - patterns: '/swagger-ui/**,/swagger-ui.html,/swagger-resources'
          methods: GET
          access: permitAll
        # knife4j 放行
        - patterns: '/doc.html'
          methods: GET
          access: permitAll
        # OpenAPI端点 放行
        - patterns: '/v3/api-docs/**'
          methods: GET
          access: permitAll
        # 验证码服务放行
        - patterns: ${ji.captcha.service-url}
          methods: GET
          access: permitAll
        # druid 监控放行
        - patterns: '/druid/**'
          methods: GET,POST
          access: permitAll
